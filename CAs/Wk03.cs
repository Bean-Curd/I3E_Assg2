using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem; //For movement
using TMPro; //For TextMeshPro

public class Wk03 : MonoBehaviour
{
   
    Vector3 moveData = Vector3.zero;
    public float moveSpeed = 0.02f;
    Vector3 rotationInput = Vector3.zero;
    public float rotationSpeed = 1.0f; 
    public TextMeshProUGUI displayText;
    int score = 0;
    
    public GameObject obj;
    public Transform head;

    // Start is called before the first frame update
    void Start()
    {
        //Debug.Log(transform.position); //Show the postion, rotation and scale of the object
        //Debug.Log(transform.rotation);
        //Debug.Log(transform.localScale);
    }

    void OnFire()
    {
        score += 1;
        displayText.text = "Score " + score;

        obj.SetActive(!obj.activeSelf);
    }

    void OnSpaceKey()
    {
        GetComponent<Rigidbody>().AddForce(new Vector3(0, 5, 0), ForceMode.Impulse);
    }

    /// <param name="value"></param>
    void OnMove(InputValue value)
    {
        moveData = value.Get<Vector2>(); //WASD value (W=1,S=-1,A=-1,D=1) -> Generated by Unity

    }

    /// <param name="value"></param>
    void OnLook(InputValue value) 
    {
        rotationInput.y = value.Get<Vector2>().x; //For left right movement
        rotationInput.x = -value.Get<Vector2>().y; //For up down movement
    }

    /// <param name="collision"></param>
    private void OnCollisionEnter(Collision collision)
    {
        Debug.Log(gameObject.name + " Enter " + collision.gameObject.name);
        if(collision.gameObject.tag == "Collectible")
        {
            Destroy(collision.gameObject);
        }
    }
    /// <param name="collision"></param>
    private void OnCollisionExit(Collision collision)
    {
        Debug.Log(gameObject.name + " Exit " + collision.gameObject.name);
    }
    /// <param name="collision"></param>
    private void OnCollisionStay(Collision collision)
    {
        Debug.Log(gameObject.name + " Stay " + collision.gameObject.name);
    }

    // Update is called once per frame
    void Update()
    {
        Vector3 forwardMove = transform.forward; //Vector3(0,0,1)
        Vector3 rightMove = transform.right; //Vector3(1,0,0)

        GetComponent<Rigidbody>().MovePosition(transform.position + (forwardMove * moveData.y  
        + rightMove * moveData.x) * moveSpeed);

        transform.rotation =
            Quaternion.Euler(transform.rotation.eulerAngles + new Vector3(0,rotationInput.y) * rotationSpeed);

        var rot = head.rotation.eulerAngles + new Vector3(rotationInput.x, 0) * rotationSpeed;

        while (rot.x > 180f)
        {
            rot.x -= 360f;
        }

        while (rot.x < -180f)
        {
            rot.x += 360f;
        }

        if (rot.x > 60f)
        {
            rot.x = 60f;
        }

        if (rot.x < -60f)
        {
            rot.x = -60f;
        }

        head.rotation =
            Quaternion.Euler(rot);
    }

}
